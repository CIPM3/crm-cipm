rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read and write their own user documents
    match /USUARIOS/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && 
        (get(/databases/$(database)/documents/USUARIOS/$(request.auth.uid)).data.role in ['admin', 'instructor']);
    }
    
    // Course Comments - allow authenticated users to read/write
    match /CourseComments/{commentId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         get(/databases/$(database)/documents/USUARIOS/$(request.auth.uid)).data.role in ['admin', 'instructor']);
      allow create: if request.auth != null;
    }
    
    // Courses - allow read for authenticated users, write for admin/instructor
    match /Cursos/{courseId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/USUARIOS/$(request.auth.uid)).data.role in ['admin', 'instructor'];
    }
    
    // Videos - allow read for authenticated users, write for admin/instructor  
    match /Videos/{videoId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/USUARIOS/$(request.auth.uid)).data.role in ['admin', 'instructor'];
    }
    
    // Other collections - allow read/write for authenticated users with proper roles
    match /AGENDADOR/{documentId} {
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/USUARIOS/$(request.auth.uid)).data.role in ['admin', 'agendador', 'instructor'];
    }
    
    match /FORMACION_GRUPO/{documentId} {
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/USUARIOS/$(request.auth.uid)).data.role in ['admin', 'formacion de grupo'];
    }
    
    match /INSTRUCTOR/{documentId} {
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/USUARIOS/$(request.auth.uid)).data.role in ['admin', 'instructor'];
    }
    
    // Default deny all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}